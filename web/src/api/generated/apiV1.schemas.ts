/**
 * Generated by orval v7.11.2 üç∫
 * Do not edit manually.
 * Api | v1
 * OpenAPI spec version: 1.0.0
 */
export interface CreateEnergyEntryRequest {
  date: string;
  mileage: number;
  type: EnergyType;
  energyUnit: EnergyUnit;
  volume: number;
  /** @nullable */
  cost: number | null;
  /** @nullable */
  pricePerUnit: number | null;
}

export interface CreateMyVehicleCommand {
  brand: string;
  model: string;
  engineType: EngineType;
  /** @nullable */
  manufacturedYear?: number | null;
  type?: NullableOfVehicleType2;
  /** @nullable */
  vin?: string | null;
}

export interface EditMyVehicleRequest {
  brand: string;
  model: string;
  engineType: EngineType;
  /** @nullable */
  manufacturedYear?: number | null;
  type?: NullableOfVehicleType2;
  /** @nullable */
  vin?: string | null;
}

export interface EnergyEntryDto {
  id: string;
  vehicleId: string;
  createdDate: string;
  updatedDate: string;
  date: string;
  mileage: number;
  type: EnergyType;
  energyUnit: EnergyUnit;
  volume: number;
  /** @nullable */
  cost: number | null;
  /** @nullable */
  pricePerUnit: number | null;
}

export enum EnergyType {
  Gasoline= 'Gasoline',
  Diesel= 'Diesel',
  LPG= 'LPG',
  CNG= 'CNG',
  Ethanol= 'Ethanol',
  Biofuel= 'Biofuel',
  Hydrogen= 'Hydrogen',
  Electric= 'Electric',

}
export enum EnergyUnit {
  Liter= 'Liter',
  Gallon= 'Gallon',
  CubicMeter= 'CubicMeter',
  kWh= 'kWh',

}
export enum EngineType {
  Fuel= 'Fuel',
  Hybrid= 'Hybrid',
  PlugInHybrid= 'PlugInHybrid',
  Electric= 'Electric',
  Hydrogen= 'Hydrogen',

}
export interface LoginUserCommand {
  email: string;
  password: string;
}

export interface LoginUserResponse {
  accessToken: string;
}

/**
 * @nullable
 */
export enum NullableOfVehicleType {
  Bus= 'Bus',
  Car= 'Car',
  Motorbike= 'Motorbike',
  Truck= 'Truck',

}
/**
 * @nullable
 */
export enum NullableOfVehicleType2 {
  Bus= 'Bus',
  Car= 'Car',
  Motorbike= 'Motorbike',
  Truck= 'Truck',

}
export interface PagedListOfEnergyEntryDto {
  /** @nullable */
  items?: EnergyEntryDto[] | null;
  page?: number;
  pageSize?: number;
  totalCount?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
}

export interface PagedListOfVehicleDto {
  /** @nullable */
  items?: VehicleDto[] | null;
  page?: number;
  pageSize?: number;
  totalCount?: number;
  hasNextPage?: boolean;
  hasPreviousPage?: boolean;
}

export interface RegisterUserCommand {
  email: string;
  firstName: string;
  lastName: string;
  password: string;
}

export interface UpdateEnergyEntryRequest {
  date: string;
  mileage: number;
  type: EnergyType;
  energyUnit: EnergyUnit;
  volume: number;
  /** @nullable */
  cost: number | null;
  /** @nullable */
  pricePerUnit: number | null;
}

export interface UserDto {
  id?: string;
  email: string;
  firstName: string;
  lastName: string;
}

export interface VehicleDto {
  id?: string;
  createdDate?: string;
  updatedDate?: string;
  brand: string;
  model: string;
  engineType: EngineType;
  /** @nullable */
  manufacturedYear?: number | null;
  type?: NullableOfVehicleType;
  /** @nullable */
  vin?: string | null;
  userId: string;
  allowedEnergyTypes?: EnergyType[];
}

export type GetApiVehiclesMyParams = {
searchTerm?: string;
pageSize?: number;
page?: number;
};

export type GetApiVehiclesVehicleIdEnergyEntriesParams = {
page?: number;
pageSize?: number;
energyTypes?: EnergyType[];
};

export type GetApiUsersUserIdEnergyEntriesParams = {
page?: number;
pageSize?: number;
energyTypes?: EnergyType[];
};

