name: garagge

services:
  api:
    container_name: api
    build:
      context: .
      dockerfile: ./src/Api/Dockerfile
    ports:
      - "5000:8080"
      - "5001:8081"
    environment:
      Jwt__Secret: ${JWT_SECRET}
      Jwt__Issuer: ${JWT_ISSUER}
      Jwt__Audience: ${JWT_AUDIENCE}
      ASPNETCORE_ENVIRONMENT: ${ASPNETCORE_ENVIRONMENT}
      ASPNETCORE_HTTP_PORT: 8080
      ASPNETCORE_HTTPS_PORT: 8081
      # DB_HOST: ${DB_HOST}
      # DB_PORT: ${DB_PORT}
      # DB_NAME: ${DB_NAME}
      # DB_USERNAME: ${DB_USERNAME}
      DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      db:
        condition: service_healthy

  db:
    container_name: db
    image: postgres:17
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - db-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  seq:
    image: datalust/seq:2024.3
    container_name: seq
    environment:
      - ACCEPT_EULA=Y
    ports:
      - 8081:80

volumes:
  db-data: